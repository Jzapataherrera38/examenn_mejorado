{"ast":null,"code":"import Caja from '../Pregun_Views/CajaWord.vue';\nexport default {\n  props: ['pregunta'],\n  components: {\n    Caja\n  },\n\n  data() {\n    return {\n      fraseConPalabras: \"\",\n      respuestaEstudianteArray: [],\n      respuestaCorrectaArray: this.pregunta.respuesta.split(' '),\n      // Respuesta correcta como array\n      mostrarMensaje: false,\n      mensajeValidacion: \"\",\n      mensajeClase: \"\"\n    };\n  },\n\n  computed: {\n    fraseActualizada() {\n      return this.fraseConPalabras;\n    }\n\n  },\n\n  mounted() {\n    this.actualizarFrase();\n  },\n\n  methods: {\n    actualizarFrase() {\n      const patron = /:(.*?):/g;\n      const nuevoTexto = this.pregunta.enunciado.replace(patron, '<span class=\"caja\" @drop=\"drop\" @dragover=\"allowDrop\" @dragenter=\"dragEnter\" @dragleave=\"dragLeave\"><span class=\"palabra\"></span></span>');\n      this.fraseConPalabras = nuevoTexto;\n    },\n\n    dragStart(palabra) {\n      this.respuestaEstudianteArray.push(palabra);\n    },\n\n    allowDrop(ev) {\n      ev.preventDefault();\n    },\n\n    dragEnter(ev) {\n      ev.preventDefault();\n      const caja = ev.target;\n      caja.classList.add(\"highlight\");\n    },\n\n    dragLeave(ev) {\n      ev.preventDefault();\n      const caja = ev.target;\n      caja.classList.remove(\"highlight\");\n    },\n\n    drop(ev) {\n      ev.preventDefault();\n      const caja = ev.target;\n      caja.classList.remove(\"highlight\");\n      const palabra = ev.dataTransfer.getData('text/plain');\n      const palabraSpan = document.createElement('span');\n      palabraSpan.textContent = palabra;\n      caja.appendChild(palabraSpan);\n      this.respuestaEstudianteArray.push(palabra);\n    },\n\n    validarFrase() {\n      if (JSON.stringify(this.respuestaEstudianteArray) === JSON.stringify(this.respuestaCorrectaArray)) {\n        this.mostrarMensaje = true;\n        this.mensajeValidacion = 'Respuesta correcta. ¡Has completado la frase correctamente!';\n        this.mensajeClase = 'mensaje-correcto';\n        this.pintarPalabrasVerdes();\n      } else {\n        this.mostrarMensaje = true;\n        this.mensajeValidacion = 'Respuesta incorrecta. Faltan o sobran palabras en la frase.';\n        this.mensajeClase = 'mensaje-incorrecto';\n        this.pintarPalabrasRojas();\n      }\n    },\n\n    pintarPalabrasVerdes() {\n      this.pregunta.opciones.forEach(palabra => {\n        const caja = document.querySelector(`[data-palabra=\"${palabra}\"]`);\n\n        if (caja) {\n          caja.style.backgroundColor = 'green';\n        }\n      });\n    },\n\n    pintarPalabrasRojas() {\n      this.pregunta.opciones.forEach(palabra => {\n        const caja = document.querySelector(`[data-palabra=\"${palabra}\"]`);\n\n        if (caja) {\n          caja.style.backgroundColor = 'red';\n        }\n      });\n    },\n\n    getPalabraColor(palabra) {\n      const caja = document.querySelector(`[data-palabra=\"${palabra}\"]`);\n\n      if (caja) {\n        return caja.style.backgroundColor;\n      }\n\n      return '';\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgCA;AAEA;EACAA,mBADA;EAEAC;IACAC;EADA,CAFA;;EAKAC;IACA;MACAC,oBADA;MAEAC,4BAFA;MAGAC,0DAHA;MAGA;MACAC,qBAJA;MAKAC,qBALA;MAMAC;IANA;EAQA,CAdA;;EAeAC;IACAC;MACA;IACA;;EAHA,CAfA;;EAoBAC;IACA;EACA,CAtBA;;EAuBAC;IACAC;MACA;MACA,mDACAC,MADA,EAEA,0IAFA;MAIA;IACA,CARA;;IASAC;MACA;IACA,CAXA;;IAYAC;MACAC;IACA,CAdA;;IAeAC;MACAD;MACA;MACAE;IACA,CAnBA;;IAoBAC;MACAH;MACA;MACAE;IACA,CAxBA;;IAyBAE;MACAJ;MACA;MACAE;MACA;MACA;MACAG;MACAH;MACA;IACA,CAlCA;;IAmCAI;MACA;QACA;QACA;QACA;QACA;MACA,CALA,MAKA;QACA;QACA;QACA;QACA;MACA;IACA,CA/CA;;IAgDAC;MACA;QACA;;QACA;UACAL;QACA;MACA,CALA;IAMA,CAvDA;;IAwDAM;MACA;QACA;;QACA;UACAN;QACA;MACA,CALA;IAMA,CA/DA;;IAgEAO;MACA;;MACA;QACA;MACA;;MACA;IACA;;EAtEA;AAvBA","names":["props","components","Caja","data","fraseConPalabras","respuestaEstudianteArray","respuestaCorrectaArray","mostrarMensaje","mensajeValidacion","mensajeClase","computed","fraseActualizada","mounted","methods","actualizarFrase","patron","dragStart","allowDrop","ev","dragEnter","caja","dragLeave","drop","palabraSpan","validarFrase","pintarPalabrasVerdes","pintarPalabrasRojas","getPalabraColor"],"sourceRoot":"src/components/Pregun_Views","sources":["PreGunta_Fillword.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"column-12\">\r\n      <div\r\n        class=\"frase-drop\"\r\n        @drop=\"drop\"\r\n        @dragover=\"allowDrop\"\r\n      >\r\n        <span v-html=\"fraseConPalabras\"></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"opciones-arrastre\">\r\n      <Caja\r\n        v-for=\"data in pregunta.opciones\"\r\n        :key=\"data\"\r\n        :palabra=\"data\"\r\n        :color=\"getPalabraColor(data)\"\r\n        :draggable=\"true\"\r\n        @dragstart=\"dragStart(data)\"\r\n      ></Caja>\r\n    </div>\r\n\r\n    <!-- Botón para validar la frase -->\r\n    <button @click=\"validarFrase\">Validar</button>\r\n    \r\n    <!-- Mensaje de validación -->\r\n    <div v-if=\"mostrarMensaje\" :class=\"mensajeClase\">{{ mensajeValidacion }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Caja from '../Pregun_Views/CajaWord.vue';\r\n\r\nexport default {\r\n  props: ['pregunta'],\r\n  components: {\r\n    Caja,\r\n  },\r\n  data() {\r\n    return {\r\n      fraseConPalabras: \"\",\r\n      respuestaEstudianteArray: [],\r\n      respuestaCorrectaArray: this.pregunta.respuesta.split(' '), // Respuesta correcta como array\r\n      mostrarMensaje: false,\r\n      mensajeValidacion: \"\",\r\n      mensajeClase: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    fraseActualizada() {\r\n      return this.fraseConPalabras;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.actualizarFrase();\r\n  },\r\n  methods: {\r\n    actualizarFrase() {\r\n      const patron = /:(.*?):/g;\r\n      const nuevoTexto = this.pregunta.enunciado.replace(\r\n        patron,\r\n        '<span class=\"caja\" @drop=\"drop\" @dragover=\"allowDrop\" @dragenter=\"dragEnter\" @dragleave=\"dragLeave\"><span class=\"palabra\"></span></span>'\r\n      );\r\n      this.fraseConPalabras = nuevoTexto;\r\n    },\r\n    dragStart(palabra) {\r\n      this.respuestaEstudianteArray.push(palabra);\r\n    },\r\n    allowDrop(ev) {\r\n      ev.preventDefault();\r\n    },\r\n    dragEnter(ev) {\r\n      ev.preventDefault();\r\n      const caja = ev.target;\r\n      caja.classList.add(\"highlight\");\r\n    },\r\n    dragLeave(ev) {\r\n      ev.preventDefault();\r\n      const caja = ev.target;\r\n      caja.classList.remove(\"highlight\");\r\n    },\r\n    drop(ev) {\r\n      ev.preventDefault();\r\n      const caja = ev.target;\r\n      caja.classList.remove(\"highlight\");\r\n      const palabra = ev.dataTransfer.getData('text/plain');\r\n      const palabraSpan = document.createElement('span');\r\n      palabraSpan.textContent = palabra;\r\n      caja.appendChild(palabraSpan);\r\n      this.respuestaEstudianteArray.push(palabra);\r\n    },\r\n    validarFrase() {\r\n      if (JSON.stringify(this.respuestaEstudianteArray) === JSON.stringify(this.respuestaCorrectaArray)) {\r\n        this.mostrarMensaje = true;\r\n        this.mensajeValidacion = 'Respuesta correcta. ¡Has completado la frase correctamente!';\r\n        this.mensajeClase = 'mensaje-correcto';\r\n        this.pintarPalabrasVerdes();\r\n      } else {\r\n        this.mostrarMensaje = true;\r\n        this.mensajeValidacion = 'Respuesta incorrecta. Faltan o sobran palabras en la frase.';\r\n        this.mensajeClase = 'mensaje-incorrecto';\r\n        this.pintarPalabrasRojas();\r\n      }\r\n    },\r\n    pintarPalabrasVerdes() {\r\n      this.pregunta.opciones.forEach(palabra => {\r\n        const caja = document.querySelector(`[data-palabra=\"${palabra}\"]`);\r\n        if (caja) {\r\n          caja.style.backgroundColor = 'green';\r\n        }\r\n      });\r\n    },\r\n    pintarPalabrasRojas() {\r\n      this.pregunta.opciones.forEach(palabra => {\r\n        const caja = document.querySelector(`[data-palabra=\"${palabra}\"]`);\r\n        if (caja) {\r\n          caja.style.backgroundColor = 'red';\r\n        }\r\n      });\r\n    },\r\n    getPalabraColor(palabra) {\r\n      const caja = document.querySelector(`[data-palabra=\"${palabra}\"]`);\r\n      if (caja) {\r\n        return caja.style.backgroundColor;\r\n      }\r\n      return '';\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.frase-drop {\r\n  border: 2px solid #ccc;\r\n  background-color: #ccc;\r\n  padding: 5px;\r\n  min-height: 100px;\r\n}\r\n\r\n.opciones-arrastre {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.caja {\r\n  display: inline;\r\n  border: 2px solid #ccc;\r\n  background-color: #ccc;\r\n  padding: 5px;\r\n  margin: 5px;\r\n}\r\n\r\n.mensaje-correcto {\r\n  margin-top: 10px;\r\n  color: green;\r\n  font-weight: bold;\r\n}\r\n\r\n.mensaje-incorrecto {\r\n  margin-top: 10px;\r\n  color: red;\r\n  font-weight: bold;\r\n}\r\n\r\n.highlight {\r\n  background-color: yellow;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}